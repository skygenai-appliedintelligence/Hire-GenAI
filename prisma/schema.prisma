// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id          String   @id @default(cuid())
  name        String
  status      String   @default("active")
  verified    Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  // Relations
  domains     CompanyDomain[]
  users       User[]

  @@map("companies")
}

model CompanyDomain {
  id         String  @id @default(cuid())
  company_id String
  domain     String  @unique
  verified   Boolean @default(false)

  // Relations
  company Company @relation(fields: [company_id], references: [id], onDelete: Cascade)

  @@map("company_domains")
}

model User {
  id          String   @id @default(cuid())
  company_id  String
  email       String   @unique
  first_name  String?
  last_name   String?
  avatar_url  String?
  status      String   @default("active")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  // Relations
  company         Company         @relation(fields: [company_id], references: [id], onDelete: Cascade)
  roles           UserRole[]
  email_identities EmailIdentity[]
  sessions        Session[]

  @@map("users")
}

model UserRole {
  id      String @id @default(cuid())
  user_id String
  role    String @default("member")

  // Relations
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("user_roles")
}

model EmailIdentity {
  id         String   @id @default(cuid())
  user_id    String
  email      String   @unique
  verified   Boolean  @default(false)
  created_at DateTime @default(now())

  // Relations
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("email_identities")
}

model OtpChallenge {
  id          String   @id @default(cuid())
  email       String
  code_hash   String
  expires_at  DateTime
  attempts    Int      @default(0)
  max_attempts Int     @default(3)
  verified    Boolean  @default(false)
  created_at  DateTime @default(now())

  @@map("otp_challenges")
}

model Session {
  id              String   @id @default(cuid())
  user_id         String
  refresh_token   String   @unique
  expires_at      DateTime
  created_at      DateTime @default(now())

  // Relations
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sessions")
}
